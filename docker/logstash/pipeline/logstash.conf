input {
  file {
    path => "/usr/share/logstash/bot_logs/*.log"
  }
}

filter {
  grok {
    match => {"message" => "%{TIMESTAMP_ISO8601:timestamp} \[%{GREEDYDATA:thread}\] %{LOGLEVEL:loglevel} %{GREEDYDATA:logger} - %{GREEDYDATA:message}"}
    overwrite => [ "message" ]
  }

  grok {
    match => ["path", "/usr/share/logstash/bot_logs/%{GREEDYDATA:bot_name}.log"]
  }

  grok {
    match => {"message" => [
      "Load %{NUMBER:metric_new_messages.sum} new messages",
      "Going to process %{NUMBER:metric_process_messages.sum} messages",
      "Going to process %{NUMBER:metric_commands_messages.sum} messages with commands",
      "Current number of active dialogs is %{NUMBER:metric_active_dialogs.max}",
      "Received new batch of messages, batch size is %{NUMBER:metric_received_batch_size.sum}",
      "Unable to send request %{DATA:unable_send_request}. Try count: %{NUMBER:metric_unable_send_try_count.max}"
    ]}
    add_tag => [ "metric" ]
  }

  if [message] == "Unable to load new batch of messages" {
    metrics {
      meter => "fail_to_load"
      add_tag => "metric"
    }
  }
}

output {
  if "metric" in [tags] {
    graphite {
        host => "graphite"
        resend_on_failure => true
        fields_are_metrics => true
        metrics_format => "telegram.bot.%{bot_name}.*"
      }
    }
}
